---
global:
  appVersion: 1.19.0-20220715214547.db9aedc

image:
  repository: artifactory.algol60.net/csm-docker/stable/hms-redfish-translation-service
  pullPolicy: IfNotPresent

kubectl:
  image:
    repository: &kubectlRepository artifactory.algol60.net/csm-docker/stable/docker-kubectl
    tag: &kubectlTag 1.19.15
    pullPolicy: &kubectlPullPolicy IfNotPresent

cray-service:
  type: "Deployment"
  nameOverride: "cray-hms-rts"
  fullnameOverride: "cray-hms-rts"
  serviceAccountName: "cray-rts-dispatcher"
  containers:
    cray-hms-rts:
      name: "cray-hms-rts"
      image:
        repository: "artifactory.algol60.net/csm-docker/stable/hms-redfish-translation-service"
      env:
        # The following ENV variable settings are taken from
        # 'templates/env_configmap.yaml' which, in turn takes
        # templated values from the 'environment' section near the end
        # of this file.  That makes it easier to override environment
        # variable settings.  Don't set environment variables directly
        # here, instead add them to the environment section and
        # configmap, and follow the template used here.
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.log_level
        - name: RF_MSG_HOST
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.rf_msg_host
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.vault_addr
        - name: HMS_VAULT_KEYPATH
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.hms_vault_keypath
        - name: VAULT_SKIP_VERIFY
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.vault_skip_verify
        - name: HSM_URL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.hsm_url
        - name: HTTPS_CERT
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.https_cert
        - name: HTTPS_KEY
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.https_key
        - name: COLLECTOR_URL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.collector_url
        - name: BACKEND_HELPER
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.backend_helper
        - name: RTS_DNS_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.rts_dns_provider
        - name: CERTIFICATE_VAULT_KEYPATH
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.certificate_vault_keypath

        - name: JAWS_VAULT_KEYPATH
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_vault_keypath
        - name: JAWS_POLLING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_polling_enabled
        - name: JAWS_POLLING_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_polling_interval
        - name: JAWS_POLLING_TEMPERATURE_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_polling_temperature_interval
        - name: JAWS_POLLING_HUMIDITY_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_polling_humidity_interval
        - name: JAWS_POLLING_WORKERS
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: cray-hms-rts.jaws_polling_workers
      volumeMounts:
        - name: default-tls-vol
          mountPath: /default-tls/
      ports:
        - name: http
          containerPort: 8082
        - name: https
          containerPort: 8083
      livenessProbe:
        httpGet:
          port: 8082
          path: /healthz
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
      readinessProbe:
        httpGet:
          port: 8082
          path: /healthz
          scheme: HTTP
        initialDelaySeconds: 5
    cray-hms-rts-redis:
      name: "cray-hms-rts-redis"
      image:
        repository: "artifactory.algol60.net/csm-docker/stable/docker.io/library/redis"
        tag: 5.0-alpine
      livenessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - redis-cli PING
        initialDelaySeconds: 15
        periodSeconds: 20
      readinessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - redis-cli PING
        initialDelaySeconds: 1
        periodSeconds: 5
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
        runAsNonRoot: true
  volumes:
    default-tls-vol:
      name: default-tls-vol
      secret: 
        secretName: cray-hms-rts-default-tls
  service:
    type: ClusterIP
    ports:
      - port: 80
        name: http
        protocol: TCP
        targetPort: http
      - port: 443
        name: https
        protocol: TCP
        targetPort: https
  initContainers:
    wait-for-cray-hms-rts-init:
      name: "wait-for-cray-hms-rts-init"
      env:
        # The following ENV variable settings are taken from
        # 'templates/env_configmap.yaml' which, in turn takes
        # templated values from the 'environment' section near the end
        # of this file.  That makes it easier to override environment
        # variable settings.  Don't set environment variables directly
        # here, instead add them to the environment section and
        # configmap, and follow the template used here.
        - name: DONT_WAIT
          valueFrom:
            configMapKeyRef:
              name: cray-rts-config
              key: wait-for-cray-hms-rts-init.dont_wait
      image:
        repository: *kubectlRepository
        tag: *kubectlTag
        pullPolicy: *kubectlPullPolicy
      command:
        - /bin/sh
        - -c
        - while [ -z "$DONT_WAIT" -a "`kubectl get jobs -n services cray-hms-rts-init -o jsonpath='{.status.conditions[0].type}'`" != "Complete" ]; do echo "Waiting for cray-hms-rts-init to complete"; sleep 3;  done; echo "Completed";

# This is where the environment variable defaults are actually set.
# Override these as needed to adjust for other environments.  For
# example, you can can say `values.environment.cray_hms_rts.backend_helper: GCloud`
# in a value override to enable the 'GCloud' backend helper.
environment:
  cray_hms_rts:
    log_level: "INFO"
    rf_msg_host: "cray-shared-kafka-kafka-bootstrap.services.svc.cluster.local:9092"
    vault_addr: "http://cray-vault.vault:8200"
    vault_skip_verify: "true"
    hms_vault_keypath: "secret/hms-creds"
    hsm_url: "http://cray-smd"
    https_cert: "/default-tls/tls.crt"
    https_key: "/default-tls/tls.key"
    collector_url: "http://cray-hms-hmcollector-ingress"
    backend_helper: "JAWS"
    rts_dns_provider: "k8s_service"
    certificate_vault_keypath: "secret/pdu-creds/certificates"

    # JAWs Backend Helper Configuration
    jaws_vault_keypath: "secret/pdu-creds"
    jaws_polling_enabled: true
    jaws_polling_interval: 10  # Seconds
    jaws_polling_temperature_interval: 30  # Seconds
    jaws_polling_humidity_interval: 30  # Seconds
    jaws_polling_workers: 30
  wait_for_cray_hms_rts_init:
    # a non-empty string in the following causes the initContainer to
    # simply exit successfully and immediately.
    dont_wait: ""
