---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name | default .Values.rtsDefaultName }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name | default .Values.rtsDefaultName }}
spec:
  replicas: {{ .Values.rtsConfig.replicas }}
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name | default .Values.rtsDefaultName }}
      app.kubernetes.io/instance: {{ .Release.Name | default .Values.rtsDefaultName }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name | default .Values.rtsDefaultName }}
        app.kubernetes.io/instance: {{ .Release.Name | default .Values.rtsDefaultName }}
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "8082,9092,2181"
        {{- if .Values.podAnnotations }}
        {{- .Values.podAnnotations | toYaml | nindent 8 -}}
        {{- end }}
    spec:
      serviceAccountName: "{{ .Release.Name | default .Values.rtsDefaultName }}-dispatcher"
      containers:
        - name: "cray-hms-rts"
          image: {{ .Values.image.repository }}:{{ default .Values.global.appVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "{{ .Values.environment.cray_hms_rts.log_level }}"
            - name: RF_MSG_HOST
              value: "{{ .Values.environment.cray_hms_rts.rf_msg_host }}"
            - name: VAULT_ADDR
              value: "{{ .Values.environment.cray_hms_rts.vault_addr }}"
            - name: HMS_VAULT_KEYPATH
              value: "{{ .Values.environment.cray_hms_rts.hms_vault_keypath }}"
            - name: VAULT_SKIP_VERIFY
              value: "{{ .Values.environment.cray_hms_rts.vault_skip_verify }}"
            - name: HSM_URL
              value: "{{ .Values.environment.cray_hms_rts.hsm_url }}"
            - name: SLS_URL
              value: "{{ .Values.environment.cray_hms_rts.sls_url }}"
            - name: HTTPS_CERT
              value: "{{ .Values.environment.cray_hms_rts.https_cert }}"
            - name: HTTPS_KEY
              value: "{{ .Values.environment.cray_hms_rts.https_key }}"
            - name: COLLECTOR_URL
              value: "{{ .Values.environment.cray_hms_rts.collector_url }}"
            - name: BACKEND_HELPER
              value: "{{ .Values.environment.cray_hms_rts.backend_helper }}"
            - name: RTS_DNS_PROVIDER
              value: "{{ .Values.environment.cray_hms_rts.rts_dns_provider }}"
            - name: CERTIFICATE_VAULT_KEYPATH
              value: "{{ .Values.environment.cray_hms_rts.certificate_vault_keypath }}"
            - name: JAWS_VAULT_KEYPATH
              value: "{{ .Values.environment.cray_hms_rts.jaws_vault_keypath }}"
            - name: JAWS_POLLING_ENABLED
              value: "{{ .Values.environment.cray_hms_rts.jaws_polling_enabled }}"
            - name: JAWS_POLLING_INTERVAL
              value: "{{ .Values.environment.cray_hms_rts.jaws_polling_interval }}"
            - name: JAWS_POLLING_TEMPERATURE_INTERVAL
              value: "{{ .Values.environment.cray_hms_rts.jaws_polling_temperature_interval }}"
            - name: JAWS_POLLING_HUMIDITY_INTERVAL
              value: "{{ .Values.environment.cray_hms_rts.jaws_polling_humidity_interval }}"
            - name: JAWS_POLLING_WORKERS
              value: "{{ .Values.environment.cray_hms_rts.jaws_polling_workers }}"
          ports:
            - name: http
              containerPort: 8082
            - name: https
              containerPort: 8083
          livenessProbe:
            httpGet:
              port: 8082
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              port: 8082
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 5
          volumeMounts:
            - name: default-tls-vol
              mountPath: /default-tls/
          resources:
            {{- .Values.rtsConfig.resources | toYaml | nindent 12 }}
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
        - name: "cray-hms-rts-redis"
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: "{{ .Values.redis.image.pullPolicy }}"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - redis-cli PING
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - redis-cli PING
            initialDelaySeconds: 1
            periodSeconds: 5
          securityContext:
            runAsUser: 999
            runAsGroup: 1000
            runAsNonRoot: true
      initContainers:
        - name: "wait-for-cray-hms-rts-init"
          env:
            - name: DONT_WAIT
              value: "{{ .Values.environment.wait_for_cray_hms_rts_init.dont_wait }}"
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - while [ -z "$DONT_WAIT" -a "`kubectl get jobs -n services cray-hms-rts-init -o jsonpath='{.status.conditions[0].type}'`" != "Complete" ]; do echo "Waiting for cray-hms-rts-init to complete"; sleep 3;  done; echo "Completed";
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
      volumes:
        - name: default-tls-vol
          secret:
            secretName: {{ .Release.Name | default .Values.rtsDefaultName }}-default-tls